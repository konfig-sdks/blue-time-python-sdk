# coding: utf-8

"""
    Orchestra API

    Code Version 1.0.7.15

    The version of the OpenAPI document: Prod
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from blue_time_python_sdk.pydantic.network_token_card_source import NetworkTokenCardSource
from blue_time_python_sdk.pydantic.pay_tools_api_models_network_tokenization_payer import PayToolsApiModelsNetworkTokenizationPayer

class PayToolsApiModelsTokenizationRequest(BaseModel):
    # Iso-369-1 2-letter language code
    consumer_language: typing.Optional[typing.Optional[str]] = Field(None, alias='consumerLanguage')

    card_holder: typing.Optional[PayToolsApiModelsNetworkTokenizationPayer] = Field(None, alias='cardHolder')

    # Device score
    device_score: typing.Optional[int] = Field(None, alias='deviceScore')

    # Account score
    account_score: typing.Optional[int] = Field(None, alias='accountScore')

    # Device latitude -90 to 90
    device_location_lat: typing.Optional[typing.Optional[typing.Union[int, float]]] = Field(None, alias='deviceLocationLat')

    # Device longitude -90 to 90
    device_location_lon: typing.Optional[typing.Optional[typing.Union[int, float]]] = Field(None, alias='deviceLocationLon')

    # Ip address of device
    device_ip_address: typing.Optional[typing.Optional[str]] = Field(None, alias='deviceIpAddress')

    card_source: typing.Optional[NetworkTokenCardSource] = Field(None, alias='cardSource')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
