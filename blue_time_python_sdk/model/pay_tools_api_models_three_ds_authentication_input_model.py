# coding: utf-8

"""
    Orchestra API

    Code Version 1.0.7.15

    The version of the OpenAPI document: Prod
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from blue_time_python_sdk import schemas  # noqa: F401


class PayToolsApiModelsThreeDSAuthenticationInputModel(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Model for 3DS authentication data
    """


    class MetaOapg:
        required = {
            "xid",
            "eci",
            "authenticationValue",
            "version",
            "merchantName",
        }
        
        class properties:
            
            
            class version(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 5
                    min_length = 1
            
            
            class authenticationValue(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    min_length = 1
            
            
            class eci(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 2
                    min_length = 1
            
            
            class xid(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 40
                    min_length = 1
            
            
            class merchantName(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 40
                    min_length = 1
            __annotations__ = {
                "version": version,
                "authenticationValue": authenticationValue,
                "eci": eci,
                "xid": xid,
                "merchantName": merchantName,
            }
    
    xid: MetaOapg.properties.xid
    eci: MetaOapg.properties.eci
    authenticationValue: MetaOapg.properties.authenticationValue
    version: MetaOapg.properties.version
    merchantName: MetaOapg.properties.merchantName
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["version"]) -> MetaOapg.properties.version: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["authenticationValue"]) -> MetaOapg.properties.authenticationValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["eci"]) -> MetaOapg.properties.eci: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["xid"]) -> MetaOapg.properties.xid: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["merchantName"]) -> MetaOapg.properties.merchantName: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["version", "authenticationValue", "eci", "xid", "merchantName", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["version"]) -> MetaOapg.properties.version: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["authenticationValue"]) -> MetaOapg.properties.authenticationValue: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["eci"]) -> MetaOapg.properties.eci: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["xid"]) -> MetaOapg.properties.xid: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["merchantName"]) -> MetaOapg.properties.merchantName: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["version", "authenticationValue", "eci", "xid", "merchantName", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        xid: typing.Union[MetaOapg.properties.xid, str, ],
        eci: typing.Union[MetaOapg.properties.eci, str, ],
        authenticationValue: typing.Union[MetaOapg.properties.authenticationValue, str, ],
        version: typing.Union[MetaOapg.properties.version, str, ],
        merchantName: typing.Union[MetaOapg.properties.merchantName, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PayToolsApiModelsThreeDSAuthenticationInputModel':
        return super().__new__(
            cls,
            *args,
            xid=xid,
            eci=eci,
            authenticationValue=authenticationValue,
            version=version,
            merchantName=merchantName,
            _configuration=_configuration,
            **kwargs,
        )
