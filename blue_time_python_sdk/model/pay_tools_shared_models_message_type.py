# coding: utf-8

"""
    Orchestra API

    Code Version 1.0.7.15

    The version of the OpenAPI document: Prod
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from blue_time_python_sdk import schemas  # noqa: F401


class PayToolsSharedModelsMessageType(
    schemas.EnumBase,
    schemas.StrSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Client message type enumeration
    """


    class MetaOapg:
        enum_value_to_name = {
            "NeverUsed": "NEVER_USED",
            "Authenticated": "AUTHENTICATED",
            "Rejected": "REJECTED",
            "FingerPrintRequired": "FINGER_PRINT_REQUIRED",
            "FingerPrintCompleted": "FINGER_PRINT_COMPLETED",
            "ChallengeRequired": "CHALLENGE_REQUIRED",
            "TechnicalProblem": "TECHNICAL_PROBLEM",
            "CardNotEnrolled": "CARD_NOT_ENROLLED",
            "NoResponse": "NO_RESPONSE",
        }
    
    @schemas.classproperty
    def NEVER_USED(cls):
        return cls("NeverUsed")
    
    @schemas.classproperty
    def AUTHENTICATED(cls):
        return cls("Authenticated")
    
    @schemas.classproperty
    def REJECTED(cls):
        return cls("Rejected")
    
    @schemas.classproperty
    def FINGER_PRINT_REQUIRED(cls):
        return cls("FingerPrintRequired")
    
    @schemas.classproperty
    def FINGER_PRINT_COMPLETED(cls):
        return cls("FingerPrintCompleted")
    
    @schemas.classproperty
    def CHALLENGE_REQUIRED(cls):
        return cls("ChallengeRequired")
    
    @schemas.classproperty
    def TECHNICAL_PROBLEM(cls):
        return cls("TechnicalProblem")
    
    @schemas.classproperty
    def CARD_NOT_ENROLLED(cls):
        return cls("CardNotEnrolled")
    
    @schemas.classproperty
    def NO_RESPONSE(cls):
        return cls("NoResponse")
