# coding: utf-8

"""
    Orchestra API

    Code Version 1.0.7.15

    The version of the OpenAPI document: Prod
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from blue_time_python_sdk import schemas  # noqa: F401


class PayToolsApiModelsPaymentGatewayDescriptionModel(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Model for Payment Gateway Description
    """


    class MetaOapg:
        
        class properties:
            
            
            class description(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'description':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class name(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'name':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class displayName(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'displayName':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
            
            
            class paymentGatewayUrl(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'paymentGatewayUrl':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
        
            @staticmethod
            def credentialsNames() -> typing.Type['PayToolsApiModelsPaymentGatewayDescriptionModelCredentialsNames']:
                return PayToolsApiModelsPaymentGatewayDescriptionModelCredentialsNames
            supportsNetworkToken = schemas.BoolSchema
            __annotations__ = {
                "description": description,
                "name": name,
                "displayName": displayName,
                "paymentGatewayUrl": paymentGatewayUrl,
                "credentialsNames": credentialsNames,
                "supportsNetworkToken": supportsNetworkToken,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["displayName"]) -> MetaOapg.properties.displayName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["paymentGatewayUrl"]) -> MetaOapg.properties.paymentGatewayUrl: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["credentialsNames"]) -> 'PayToolsApiModelsPaymentGatewayDescriptionModelCredentialsNames': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supportsNetworkToken"]) -> MetaOapg.properties.supportsNetworkToken: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["description", "name", "displayName", "paymentGatewayUrl", "credentialsNames", "supportsNetworkToken", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["description"]) -> typing.Union[MetaOapg.properties.description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union[MetaOapg.properties.name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["displayName"]) -> typing.Union[MetaOapg.properties.displayName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["paymentGatewayUrl"]) -> typing.Union[MetaOapg.properties.paymentGatewayUrl, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["credentialsNames"]) -> typing.Union['PayToolsApiModelsPaymentGatewayDescriptionModelCredentialsNames', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supportsNetworkToken"]) -> typing.Union[MetaOapg.properties.supportsNetworkToken, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["description", "name", "displayName", "paymentGatewayUrl", "credentialsNames", "supportsNetworkToken", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        description: typing.Union[MetaOapg.properties.description, None, str, schemas.Unset] = schemas.unset,
        name: typing.Union[MetaOapg.properties.name, None, str, schemas.Unset] = schemas.unset,
        displayName: typing.Union[MetaOapg.properties.displayName, None, str, schemas.Unset] = schemas.unset,
        paymentGatewayUrl: typing.Union[MetaOapg.properties.paymentGatewayUrl, None, str, schemas.Unset] = schemas.unset,
        credentialsNames: typing.Union['PayToolsApiModelsPaymentGatewayDescriptionModelCredentialsNames', schemas.Unset] = schemas.unset,
        supportsNetworkToken: typing.Union[MetaOapg.properties.supportsNetworkToken, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PayToolsApiModelsPaymentGatewayDescriptionModel':
        return super().__new__(
            cls,
            *args,
            description=description,
            name=name,
            displayName=displayName,
            paymentGatewayUrl=paymentGatewayUrl,
            credentialsNames=credentialsNames,
            supportsNetworkToken=supportsNetworkToken,
            _configuration=_configuration,
            **kwargs,
        )

from blue_time_python_sdk.model.pay_tools_api_models_payment_gateway_description_model_credentials_names import PayToolsApiModelsPaymentGatewayDescriptionModelCredentialsNames
