# coding: utf-8

"""
    Orchestra API

    Code Version 1.0.7.15

    The version of the OpenAPI document: Prod
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from blue_time_python_sdk.pydantic.pay_tools_api_models_card_input_model import PayToolsApiModelsCardInputModel
from blue_time_python_sdk.pydantic.pay_tools_api_models_payer_details import PayToolsApiModelsPayerDetails
from blue_time_python_sdk.pydantic.pay_tools_api_models_payment_gateway_account import PayToolsApiModelsPaymentGatewayAccount
from blue_time_python_sdk.pydantic.payments_network_token_schemes import PaymentsNetworkTokenSchemes

class PayToolsApiModelsAuthRequestModel(BaseModel):
    # The currency of the transaction. Based on the <a href=\"https://en.wikipedia.org/wiki/ISO_4217#Active_codes\" target=\"_blank\">ISO 4217</a> standard.
    currency: str = Field(alias='currency')

    card: PayToolsApiModelsCardInputModel = Field(alias='card')

    # The amount to be charged (the amount should be in major units - for example, 10.23)
    amount: typing.Union[int, float] = Field(alias='amount')

    # This field is an additional optional parameter used by some of our payment processors. Please read our additional guidance section for payment processors that use this and other parameters
    is_digital: typing.Optional[bool] = Field(None, alias='isDigital')

    # This field is an additional optional parameter used by some of our payment processors. Please read our additional guidance section for payment processors that use this and other parameters
    order_desc: typing.Optional[typing.Optional[str]] = Field(None, alias='orderDesc')

    payer_details: typing.Optional[PayToolsApiModelsPayerDetails] = Field(None, alias='payerDetails')

    # Your custom reference for this transaction
    my_ref: typing.Optional[typing.Optional[str]] = Field(None, alias='myRef')

    # The reference name provided to the stored Payment Gateway Account as set in `PUT /PaymentGatewayAccounts/{name}`.  **Please note**, if you provide us with both this parameter and the raw credentials in the `paymentGatewayAccount` object, this parameter will be ignored and the raw credentials will take precedence.
    payment_gateway_account_name: typing.Optional[typing.Optional[str]] = Field(None, alias='paymentGatewayAccountName')

    # Optional parameter if the payment gateway requires authentication using a client certificate. The name of the certificate that was stored in our system via our <a href=\"https://portal.epaytools.com\" target=\"_blank\">users portal</a>
    certificate_name: typing.Optional[typing.Optional[str]] = Field(None, alias='certificateName')

    payment_gateway_account: typing.Optional[PayToolsApiModelsPaymentGatewayAccount] = Field(None, alias='paymentGatewayAccount')

    network_token_brand: typing.Optional[PaymentsNetworkTokenSchemes] = Field(None, alias='networkTokenBrand')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
