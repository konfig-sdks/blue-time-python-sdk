# coding: utf-8

"""
    Orchestra API

    Code Version 1.0.7.15

    The version of the OpenAPI document: Prod
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from blue_time_python_sdk.pydantic.pay_tools_api_models_three_ds_authentication_input_model import PayToolsApiModelsThreeDSAuthenticationInputModel
from blue_time_python_sdk.pydantic.payments_card_types import PaymentsCardTypes

class PayToolsApiModelsCardInputModel(BaseModel):
    # Cardholder name (as apears on card)
    card_holder_name: str = Field(alias='cardHolderName')

    # Card number (PAN) or a Reference to a Tokenized string. A Token should be referenced in the format @TOKEN, e.g \"@nQGywsQE9gbURtrXEjTZwtWqeMdK9nsO\"
    card_number: str = Field(alias='cardNumber')

    # Expiration year
    expiration_year: int = Field(alias='expirationYear')

    # Expiration month
    expiration_month: int = Field(alias='expirationMonth')

    # Card owner Id
    owner_i_d: typing.Optional[typing.Optional[str]] = Field(None, alias='ownerID')

    # Card Issue Number
    issue_number: typing.Optional[typing.Optional[str]] = Field(None, alias='issueNumber')

    # Card security code (digits on back of card)
    cvv: typing.Optional[typing.Optional[str]] = Field(None, alias='cvv')

    three_d_s_authentication: typing.Optional[PayToolsApiModelsThreeDSAuthenticationInputModel] = Field(None, alias='threeDSAuthentication')

    card_type: typing.Optional[PaymentsCardTypes] = Field(None, alias='cardType')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
