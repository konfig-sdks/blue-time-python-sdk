# coding: utf-8

"""
    Orchestra API

    Code Version 1.0.7.15

    The version of the OpenAPI document: Prod
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from blue_time_python_sdk.pydantic.payments_currency_code import PaymentsCurrencyCode
from blue_time_python_sdk.pydantic.payments_operation import PaymentsOperation
from blue_time_python_sdk.pydantic.payments_result import PaymentsResult

class PaymentsOperationResult(BaseModel):
    authorization_code: typing.Optional[typing.Optional[str]] = Field(None, alias='authorizationCode')

    operation_type: typing.Optional[PaymentsOperation] = Field(None, alias='operationType')

    currency: typing.Optional[PaymentsCurrencyCode] = Field(None, alias='currency')

    amount: typing.Optional[typing.Union[int, float]] = Field(None, alias='amount')

    operation_result_code: typing.Optional[PaymentsResult] = Field(None, alias='operationResultCode')

    operation_result_description: typing.Optional[typing.Optional[str]] = Field(None, alias='operationResultDescription')

    custom_gateway_response: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='customGatewayResponse')

    gateway_name: typing.Optional[typing.Optional[str]] = Field(None, alias='gatewayName')

    gateway_reference: typing.Optional[typing.Optional[str]] = Field(None, alias='gatewayReference')

    gateway_result_code: typing.Optional[typing.Optional[str]] = Field(None, alias='gatewayResultCode')

    gateway_result_description: typing.Optional[typing.Optional[str]] = Field(None, alias='gatewayResultDescription')

    gateway_result_sub_code: typing.Optional[typing.Optional[str]] = Field(None, alias='gatewayResultSubCode')

    gateway_result_sub_description: typing.Optional[typing.Optional[str]] = Field(None, alias='gatewayResultSubDescription')

    gateway_token: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='gatewayToken')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
